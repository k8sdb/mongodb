# register to intercept kubedb CRD creates / updates
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: admission.kubedb.com
  labels:
    app: kubedb
webhooks:
- name: mongodb.admission.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.kubedb.com/v1alpha1/mongodbreviews
    caBundle: ${KUBE_CA}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
- name: snapshot.admission.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.kubedb.com/v1alpha1/snapshotreviews
    caBundle: ${KUBE_CA}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["snapshots"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
- name: dormantdatabase.admission.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.kubedb.com/v1alpha1/dormantdatabasereviews
    caBundle: ${KUBE_CA}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["dormantdatabases"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail

---
# mutating webhook
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: admission.kubedb.com
  labels:
    app: kubedb
webhooks:
- name: mongodb.admission.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.kubedb.com/v1alpha1/mongodbmutates
    caBundle: ${KUBE_CA}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  failurePolicy: Fail
---
apiVersion: v1
kind: Service
metadata:
  name: kubedb-operator
  namespace: ${KUBEDB_NAMESPACE}
  labels:
    app: kubedb
spec:
  ports:
  - name: api
    port: 443
    protocol: TCP
    targetPort: 8443
  type: ClusterIP

---
# To get to the host machine from the VM,
# the IP is 10.0.2.2 (by convention)
# ref: https://stackoverflow.com/questions/9537751/virtualbox-port-forward-from-guest-to-host
apiVersion: v1
kind: Endpoints
metadata:
  name: kubedb-operator
  namespace: ${KUBEDB_NAMESPACE}
  labels:
    app: kubedb
subsets:
- addresses:
  - ip: 10.0.2.2
  ports:
  - name: api
    port: 8443
    protocol: TCP

---
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.admission.kubedb.com
  labels:
    app: kubedb
spec:
  insecureSkipTLSVerify: true
  group: admission.kubedb.com
  groupPriorityMinimum: 1000
  versionPriority: 15
  service:
    name: kubedb-operator
    namespace: ${KUBEDB_NAMESPACE}
  version: v1alpha1
